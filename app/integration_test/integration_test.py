# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from webdriver_manager.chrome import ChromeDriverManager
from dotenv import load_dotenv
import os

load_dotenv()

class TestIntegrationtest():
  def setup_method(self, method):
    self.driver = webdriver.Chrome(ChromeDriverManager().install())
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_integrationtest(self):
    self.driver.get(f"http://localhost:{os.environ.get('APP_PORT')}/")
    self.driver.set_window_size(1660, 1005)
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn-primary")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.vars["myRandomNumber"] = self.driver.execute_script("return Math.random()")
    self.driver.find_element(By.NAME, "email").click()
    self.driver.find_element(By.NAME, "email").send_keys("Demo",self.vars["myRandomNumber"],"@gmail.com")
    self.driver.find_element(By.NAME, "full_name").click()
    self.driver.find_element(By.NAME, "full_name").send_keys("Demo User")
    self.driver.find_element(By.NAME, "password").send_keys("123456")
    self.driver.find_element(By.NAME, "password2").send_keys("123456")
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.LINK_TEXT, "Create Profile").click()
    self.driver.find_element(By.NAME, "email").click()
    self.driver.find_element(By.NAME, "email").send_keys("Demo",self.vars["myRandomNumber"],"@gmail.com")
    self.driver.find_element(By.NAME, "age").click()
    self.driver.find_element(By.NAME, "age").send_keys("21")
    self.driver.find_element(By.NAME, "height").click()
    self.driver.find_element(By.NAME, "height").send_keys("180")
    self.driver.find_element(By.NAME, "weight").send_keys("78")
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(1)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".profile-top").click()
    self.driver.find_element(By.CSS_SELECTOR, ".profile-grid").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".profile-height").text == "Height\\\\n180cm"
    self.driver.find_element(By.CSS_SELECTOR, ".profile-grid").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".profile-weight").text == "Weight\\\\n78kg"
    self.driver.find_element(By.LINK_TEXT, "Menu").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
    self.driver.find_element(By.NAME, "food_serach").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".alert-success").text == "Menu Created"
    self.driver.find_element(By.NAME, "food_serach").click()
    self.driver.find_element(By.NAME, "food_serach").send_keys("Avocado")
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(3)").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(2) .food-title").text == "Avocado"
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary:nth-child(3)").click()
    self.driver.find_element(By.NAME, "food_serach").send_keys("pizza")
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(3)").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(2) .food-title").text == "Pizza"
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary:nth-child(3)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(5)").click()
    self.driver.find_element(By.LINK_TEXT, "Menu").click()
    self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(7) .food-title").click()
    self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(7) .food-title").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(7) .food-title")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    assert self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(7) .food-title").text == "Avocado"
    self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(8) .food-title").click()
    self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(8) .food-title").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(8) .food-title")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    assert self.driver.find_element(By.CSS_SELECTOR, ".exercise-grid:nth-child(8) .food-title").text == "Pizza"
    self.driver.find_element(By.LINK_TEXT, "Workout").click()
    self.driver.find_element(By.LINK_TEXT, "Create Workout").click()
    self.driver.find_element(By.CSS_SELECTOR, ".css-319lph-ValueContainer").click()
    self.driver.find_element(By.ID, "react-select-17-option-2").click()
    self.driver.find_element(By.NAME, "split").click()
    element = self.driver.find_element(By.NAME, "split")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".workout-full_body-section:nth-child(3) > .btn").click()
    self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(1)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".btn:nth-child(1)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".MuiButtonBase-root:nth-child(1)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".MuiButtonBase-root:nth-child(1)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".btn-primary:nth-child(2)").click()
    self.driver.find_element(By.NAME, "number_of_sets").click()
    self.driver.find_element(By.NAME, "number_of_sets").send_keys("3")
    self.driver.find_element(By.NAME, "number_of_reps").click()
    self.driver.find_element(By.NAME, "number_of_reps").send_keys("12")
    self.driver.find_element(By.CSS_SELECTOR, ".input-field > .btn:nth-child(6)").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".input-field > .btn:nth-child(6)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".alert").click()
    self.driver.find_element(By.CSS_SELECTOR, ".alert").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".alert")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".alert").click()
    self.driver.find_element(By.CSS_SELECTOR, ".my-1:nth-child(6)").click()
    self.driver.find_element(By.CSS_SELECTOR, ".exercise-title").click()
    self.driver.find_element(By.CSS_SELECTOR, ".exercise-title").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".exercise-title")
    actions = ActionChains(self.driver)
    actions.double_click(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".exercise-title").click()
    assert self.driver.find_element(By.CSS_SELECTOR, ".exercise-title").text == "archer push up"
    self.driver.find_element(By.CSS_SELECTOR, ".btn-light:nth-child(3)").click()
    self.driver.find_element(By.NAME, "food_serach").send_keys("avocado and pizza")
  
